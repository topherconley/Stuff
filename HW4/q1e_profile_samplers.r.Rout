
R version 3.0.1 (2013-05-16) -- "Good Sport"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rm(list = ls());
> max_tries_r <- 2000L;
> ntimes <- 8L;
> log_n <- sapply(seq_len(ntimes), function(k) log(10^k));
> source("rtruncnorm_cpu.r");
> library(Rcpp);
> sourceCpp("rtruncnorm_cpu.cpp");
> cpu_times <- sapply(seq_len(ntimes), function(k) {
+ 		system.time({
+ 			N <- as.integer(10^k);
+ 			mu <- rep(2,N);
+ 			sd <- rep(1,N);
+ 			lo <- rep(0,N);
+ 			hi <- rep(1.5, N);
+ 			rtruncnorm_cpu_rcpp(n = N, mu, sd, 
+ 				lo, hi,
+ 				max_tries_r);
+ 			})
+ 		})
> 
> source("launch_rcuda_env.r");

Attaching package: ‘RCUDA’

The following object is masked from ‘package:Rcpp’:

    loadModule

The following object is masked from ‘package:methods’:

    getFunction

Setting cuGetContext(TRUE)...
done. Profiling CUDA code...
Loading module...
done. Extracting kernel...
Warning messages:
1: replacing previous import ‘coerce’ when loading ‘RAutoGenRunTime’ 
2: replacing previous import ‘show’ when loading ‘RAutoGenRunTime’ 
> gpu_times <- sapply(seq_len(ntimes), function(k) {
+ 	system.time({
+ 		N <- as.integer(10^k);
+ 		mu <- rep(2,N);
+ 		sd <- rep(1,N);
+ 		lo <- rep(0,N);
+ 		hi <- rep(1.5, N);
+ 		rtruncnorm_gpu(kernel, x = runif(N), N, mu, sd, lo, hi, 
+ 				compute_grid(N));  
+ 		})
+ 	})
> 
> pdf("q1e_run_time.pdf")
> plot(log_n, cpu_times["elapsed",], type = 'b', pch = 19, 
+      xlab = "log(number sampled)", ylab = "elapsed time (seconds)" )
> lines(log_n, gpu_times["elapsed",], type = 'b', pch = 19, 
+ 		main = "GPU based on Rcpp code", xlab = "log(number sampled)", ylab = "elapsed time (seconds)",
+ 	col = "blue")
> dev.off()  
null device 
          1 
> 
> proc.time()
   user  system elapsed 
 65.111  10.304  75.469 
